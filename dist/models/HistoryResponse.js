"use strict";
// Copyright (c) 2023 Apple Inc. Licensed under MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.HistoryResponseValidator = void 0;
const Environment_1 = require("./Environment");
class HistoryResponseValidator {
    validate(obj) {
        if ((typeof obj['revision'] !== 'undefined') && !(typeof obj['revision'] === "string" || obj['revision'] instanceof String)) {
            return false;
        }
        if ((typeof obj['hasMore'] !== 'undefined') && !(typeof obj['hasMore'] === "boolean" || obj['hasMore'] instanceof Boolean)) {
            return false;
        }
        if ((typeof obj['bundleId'] !== 'undefined') && !(typeof obj['bundleId'] === "string" || obj['bundleId'] instanceof String)) {
            return false;
        }
        if ((typeof obj['appAppleId'] !== 'undefined') && !(typeof obj['appAppleId'] === "number")) {
            return false;
        }
        if ((typeof obj['environment'] !== 'undefined') && !(HistoryResponseValidator.environmentValidator.validate(obj['environment']))) {
            return false;
        }
        if (typeof obj['signedTransactions'] !== 'undefined') {
            if (!Array.isArray(obj['signedTransactions'])) {
                return false;
            }
            for (const signedTransaction of obj['signedTransactions']) {
                if (!(typeof signedTransaction === "string" || signedTransaction instanceof String)) {
                    return false;
                }
            }
        }
        return true;
    }
}
exports.HistoryResponseValidator = HistoryResponseValidator;
HistoryResponseValidator.environmentValidator = new Environment_1.EnvironmentValidator();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGlzdG9yeVJlc3BvbnNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vbW9kZWxzL0hpc3RvcnlSZXNwb25zZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsNERBQTREOzs7QUFFNUQsK0NBQWtFO0FBcURsRSxNQUFhLHdCQUF3QjtJQUVqQyxRQUFRLENBQUMsR0FBUTtRQUNiLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxVQUFVLENBQUMsS0FBSyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxHQUFHLENBQUMsVUFBVSxDQUFDLEtBQUssUUFBUSxJQUFJLEdBQUcsQ0FBQyxVQUFVLENBQUMsWUFBWSxNQUFNLENBQUMsRUFBRSxDQUFDO1lBQzFILE9BQU8sS0FBSyxDQUFBO1FBQ2hCLENBQUM7UUFDRCxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsU0FBUyxDQUFDLEtBQUssV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sR0FBRyxDQUFDLFNBQVMsQ0FBQyxLQUFLLFNBQVMsSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDLFlBQVksT0FBTyxDQUFDLEVBQUUsQ0FBQztZQUN6SCxPQUFPLEtBQUssQ0FBQTtRQUNoQixDQUFDO1FBQ0QsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLFVBQVUsQ0FBQyxLQUFLLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxVQUFVLENBQUMsS0FBSyxRQUFRLElBQUksR0FBRyxDQUFDLFVBQVUsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxFQUFFLENBQUM7WUFDMUgsT0FBTyxLQUFLLENBQUE7UUFDaEIsQ0FBQztRQUNELElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxZQUFZLENBQUMsS0FBSyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxHQUFHLENBQUMsWUFBWSxDQUFDLEtBQUssUUFBUSxDQUFDLEVBQUUsQ0FBQztZQUN6RixPQUFPLEtBQUssQ0FBQTtRQUNoQixDQUFDO1FBQ0QsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLGFBQWEsQ0FBQyxLQUFLLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyx3QkFBd0IsQ0FBQyxvQkFBb0IsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1lBQy9ILE9BQU8sS0FBSyxDQUFBO1FBQ2hCLENBQUM7UUFDRCxJQUFJLE9BQU8sR0FBRyxDQUFDLG9CQUFvQixDQUFDLEtBQUssV0FBVyxFQUFFLENBQUM7WUFDbkQsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLENBQUMsRUFBRSxDQUFDO2dCQUM1QyxPQUFPLEtBQUssQ0FBQTtZQUNoQixDQUFDO1lBQ0QsS0FBSyxNQUFNLGlCQUFpQixJQUFJLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxFQUFFLENBQUM7Z0JBQ3hELElBQUksQ0FBQyxDQUFDLE9BQU8saUJBQWlCLEtBQUssUUFBUSxJQUFJLGlCQUFpQixZQUFZLE1BQU0sQ0FBQyxFQUFFLENBQUM7b0JBQ2xGLE9BQU8sS0FBSyxDQUFBO2dCQUNoQixDQUFDO1lBQ0wsQ0FBQztRQUNMLENBQUM7UUFDRCxPQUFPLElBQUksQ0FBQTtJQUNmLENBQUM7O0FBN0JMLDREQThCQztBQTdCbUIsNkNBQW9CLEdBQUcsSUFBSSxrQ0FBb0IsRUFBRSxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDIzIEFwcGxlIEluYy4gTGljZW5zZWQgdW5kZXIgTUlUIExpY2Vuc2UuXG5cbmltcG9ydCB7IEVudmlyb25tZW50LCBFbnZpcm9ubWVudFZhbGlkYXRvciB9IGZyb20gXCIuL0Vudmlyb25tZW50XCI7XG5pbXBvcnQgeyBWYWxpZGF0b3IgfSBmcm9tIFwiLi9WYWxpZGF0b3JcIjtcblxuLyoqXG4gKiBBIHJlc3BvbnNlIHRoYXQgY29udGFpbnMgdGhlIGN1c3RvbWVy4oCZcyB0cmFuc2FjdGlvbiBoaXN0b3J5IGZvciBhbiBhcHAuXG4gKlxuICoge0BsaW5rIGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxlLmNvbS9kb2N1bWVudGF0aW9uL2FwcHN0b3Jlc2VydmVyYXBpL2hpc3RvcnlyZXNwb25zZSBIaXN0b3J5UmVzcG9uc2V9XG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgSGlzdG9yeVJlc3BvbnNlIHtcbiAgICAvKipcbiAgICAgKiBBIHRva2VuIHlvdSB1c2UgaW4gYSBxdWVyeSB0byByZXF1ZXN0IHRoZSBuZXh0IHNldCBvZiB0cmFuc2FjdGlvbnMgZm9yIHRoZSBjdXN0b21lci5cbiAgICAgKlxuICAgICAqIHtAbGluayBodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20vZG9jdW1lbnRhdGlvbi9hcHBzdG9yZXNlcnZlcmFwaS9yZXZpc2lvbiByZXZpc2lvbn1cbiAgICAgKiovXG4gICAgcmV2aXNpb24/OiBzdHJpbmdcbiAgICAgICAgXG4gICAgLyoqXG4gICAgICogQSBCb29sZWFuIHZhbHVlIGluZGljYXRpbmcgd2hldGhlciB0aGUgQXBwIFN0b3JlIGhhcyBtb3JlIHRyYW5zYWN0aW9uIGRhdGEuXG4gICAgICpcbiAgICAgKiB7QGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2RvY3VtZW50YXRpb24vYXBwc3RvcmVzZXJ2ZXJhcGkvaGFzbW9yZSBoYXNNb3JlfVxuICAgICAqKi9cbiAgICBoYXNNb3JlPzogYm9vbGVhblxuICAgICAgICBcbiAgICAvKipcbiAgICAgKiBUaGUgYnVuZGxlIGlkZW50aWZpZXIgb2YgYW4gYXBwLlxuICAgICAqXG4gICAgICoge0BsaW5rIGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxlLmNvbS9kb2N1bWVudGF0aW9uL2FwcHN0b3Jlc2VydmVyYXBpL2J1bmRsZWlkIGJ1bmRsZUlkfVxuICAgICAqKi9cbiAgICBidW5kbGVJZD86IHN0cmluZ1xuICAgICAgICBcbiAgICAvKipcbiAgICAgKiBUaGUgdW5pcXVlIGlkZW50aWZpZXIgb2YgYW4gYXBwIGluIHRoZSBBcHAgU3RvcmUuXG4gICAgICpcbiAgICAgKiB7QGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2RvY3VtZW50YXRpb24vYXBwc3RvcmVzZXJ2ZXJub3RpZmljYXRpb25zL2FwcGFwcGxlaWQgYXBwQXBwbGVJZH1cbiAgICAgKiovXG4gICAgYXBwQXBwbGVJZD86IG51bWJlclxuICAgICAgICBcbiAgICAvKipcbiAgICAgKiBUaGUgc2VydmVyIGVudmlyb25tZW50IGluIHdoaWNoIHlvdeKAmXJlIG1ha2luZyB0aGUgcmVxdWVzdCwgd2hldGhlciBzYW5kYm94IG9yIHByb2R1Y3Rpb24uXG4gICAgICpcbiAgICAgKiB7QGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2RvY3VtZW50YXRpb24vYXBwc3RvcmVzZXJ2ZXJhcGkvZW52aXJvbm1lbnQgZW52aXJvbm1lbnR9XG4gICAgICoqL1xuICAgIGVudmlyb25tZW50PzogRW52aXJvbm1lbnQgfCBzdHJpbmdcblxuICAgIC8qKlxuICAgICAqIEFuIGFycmF5IG9mIGluLWFwcCBwdXJjaGFzZSB0cmFuc2FjdGlvbnMgZm9yIHRoZSBjdXN0b21lciwgc2lnbmVkIGJ5IEFwcGxlLCBpbiBKU09OIFdlYiBTaWduYXR1cmUgZm9ybWF0LlxuICAgICAqXG4gICAgICoge0BsaW5rIGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxlLmNvbS9kb2N1bWVudGF0aW9uL2FwcHN0b3Jlc2VydmVyYXBpL2p3c3RyYW5zYWN0aW9uIEpXU1RyYW5zYWN0aW9ufVxuICAgICAqKi9cbiAgICBzaWduZWRUcmFuc2FjdGlvbnM/OiBzdHJpbmdbXTtcbn1cblxuXG5leHBvcnQgY2xhc3MgSGlzdG9yeVJlc3BvbnNlVmFsaWRhdG9yIGltcGxlbWVudHMgVmFsaWRhdG9yPEhpc3RvcnlSZXNwb25zZT4ge1xuICAgIHN0YXRpYyByZWFkb25seSBlbnZpcm9ubWVudFZhbGlkYXRvciA9IG5ldyBFbnZpcm9ubWVudFZhbGlkYXRvcigpXG4gICAgdmFsaWRhdGUob2JqOiBhbnkpOiBvYmogaXMgSGlzdG9yeVJlc3BvbnNlIHtcbiAgICAgICAgaWYgKCh0eXBlb2Ygb2JqWydyZXZpc2lvbiddICE9PSAndW5kZWZpbmVkJykgJiYgISh0eXBlb2Ygb2JqWydyZXZpc2lvbiddID09PSBcInN0cmluZ1wiIHx8IG9ialsncmV2aXNpb24nXSBpbnN0YW5jZW9mIFN0cmluZykpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICB9XG4gICAgICAgIGlmICgodHlwZW9mIG9ialsnaGFzTW9yZSddICE9PSAndW5kZWZpbmVkJykgJiYgISh0eXBlb2Ygb2JqWydoYXNNb3JlJ10gPT09IFwiYm9vbGVhblwiIHx8IG9ialsnaGFzTW9yZSddIGluc3RhbmNlb2YgQm9vbGVhbikpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICB9XG4gICAgICAgIGlmICgodHlwZW9mIG9ialsnYnVuZGxlSWQnXSAhPT0gJ3VuZGVmaW5lZCcpICYmICEodHlwZW9mIG9ialsnYnVuZGxlSWQnXSA9PT0gXCJzdHJpbmdcIiB8fCBvYmpbJ2J1bmRsZUlkJ10gaW5zdGFuY2VvZiBTdHJpbmcpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgfVxuICAgICAgICBpZiAoKHR5cGVvZiBvYmpbJ2FwcEFwcGxlSWQnXSAhPT0gJ3VuZGVmaW5lZCcpICYmICEodHlwZW9mIG9ialsnYXBwQXBwbGVJZCddID09PSBcIm51bWJlclwiKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgIH1cbiAgICAgICAgaWYgKCh0eXBlb2Ygb2JqWydlbnZpcm9ubWVudCddICE9PSAndW5kZWZpbmVkJykgJiYgIShIaXN0b3J5UmVzcG9uc2VWYWxpZGF0b3IuZW52aXJvbm1lbnRWYWxpZGF0b3IudmFsaWRhdGUob2JqWydlbnZpcm9ubWVudCddKSkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2Ygb2JqWydzaWduZWRUcmFuc2FjdGlvbnMnXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIGlmICghQXJyYXkuaXNBcnJheShvYmpbJ3NpZ25lZFRyYW5zYWN0aW9ucyddKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yIChjb25zdCBzaWduZWRUcmFuc2FjdGlvbiBvZiBvYmpbJ3NpZ25lZFRyYW5zYWN0aW9ucyddKSB7XG4gICAgICAgICAgICAgICAgaWYgKCEodHlwZW9mIHNpZ25lZFRyYW5zYWN0aW9uID09PSBcInN0cmluZ1wiIHx8IHNpZ25lZFRyYW5zYWN0aW9uIGluc3RhbmNlb2YgU3RyaW5nKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG59XG4iXX0=