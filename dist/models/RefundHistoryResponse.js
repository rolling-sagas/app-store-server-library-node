"use strict";
// Copyright (c) 2023 Apple Inc. Licensed under MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.RefundHistoryResponseValidator = void 0;
class RefundHistoryResponseValidator {
    validate(obj) {
        if (typeof obj['signedTransactions'] !== 'undefined') {
            if (!Array.isArray(obj['signedTransactions'])) {
                return false;
            }
            for (const signedTransaction of obj['signedTransactions']) {
                if (!(typeof signedTransaction === "string" || signedTransaction instanceof String)) {
                    return false;
                }
            }
        }
        if ((typeof obj['revision'] !== 'undefined') && !(typeof obj['revision'] === "string" || obj['revision'] instanceof String)) {
            return false;
        }
        if ((typeof obj['hasMore'] !== 'undefined') && !(typeof obj['hasMore'] === "boolean" || obj['hasMore'] instanceof Boolean)) {
            return false;
        }
        return true;
    }
}
exports.RefundHistoryResponseValidator = RefundHistoryResponseValidator;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVmdW5kSGlzdG9yeVJlc3BvbnNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vbW9kZWxzL1JlZnVuZEhpc3RvcnlSZXNwb25zZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsNERBQTREOzs7QUFrQzVELE1BQWEsOEJBQThCO0lBQ3ZDLFFBQVEsQ0FBQyxHQUFRO1FBQ2IsSUFBSSxPQUFPLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLFdBQVcsRUFBRSxDQUFDO1lBQ25ELElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLEVBQUUsQ0FBQztnQkFDNUMsT0FBTyxLQUFLLENBQUE7WUFDaEIsQ0FBQztZQUNELEtBQUssTUFBTSxpQkFBaUIsSUFBSSxHQUFHLENBQUMsb0JBQW9CLENBQUMsRUFBRSxDQUFDO2dCQUN4RCxJQUFJLENBQUMsQ0FBQyxPQUFPLGlCQUFpQixLQUFLLFFBQVEsSUFBSSxpQkFBaUIsWUFBWSxNQUFNLENBQUMsRUFBRSxDQUFDO29CQUNsRixPQUFPLEtBQUssQ0FBQTtnQkFDaEIsQ0FBQztZQUNMLENBQUM7UUFDTCxDQUFDO1FBQ0QsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLFVBQVUsQ0FBQyxLQUFLLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxVQUFVLENBQUMsS0FBSyxRQUFRLElBQUksR0FBRyxDQUFDLFVBQVUsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxFQUFFLENBQUM7WUFDMUgsT0FBTyxLQUFLLENBQUE7UUFDaEIsQ0FBQztRQUNELElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxTQUFTLENBQUMsS0FBSyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxHQUFHLENBQUMsU0FBUyxDQUFDLEtBQUssU0FBUyxJQUFJLEdBQUcsQ0FBQyxTQUFTLENBQUMsWUFBWSxPQUFPLENBQUMsRUFBRSxDQUFDO1lBQ3pILE9BQU8sS0FBSyxDQUFBO1FBQ2hCLENBQUM7UUFDRCxPQUFPLElBQUksQ0FBQTtJQUNmLENBQUM7Q0FDSjtBQXBCRCx3RUFvQkMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMjMgQXBwbGUgSW5jLiBMaWNlbnNlZCB1bmRlciBNSVQgTGljZW5zZS5cblxuaW1wb3J0IHsgVmFsaWRhdG9yIH0gZnJvbSBcIi4vVmFsaWRhdG9yXCI7XG5cbi8qKlxuICogQSByZXNwb25zZSB0aGF0IGNvbnRhaW5zIGFuIGFycmF5IG9mIHNpZ25lZCBKU09OIFdlYiBTaWduYXR1cmUgKEpXUykgcmVmdW5kZWQgdHJhbnNhY3Rpb25zLCBhbmQgcGFnaW5nIGluZm9ybWF0aW9uLlxuICpcbiAqIHtAbGluayBodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20vZG9jdW1lbnRhdGlvbi9hcHBzdG9yZXNlcnZlcmFwaS9yZWZ1bmRoaXN0b3J5cmVzcG9uc2UgUmVmdW5kSGlzdG9yeVJlc3BvbnNlfVxuICovXG5leHBvcnQgaW50ZXJmYWNlIFJlZnVuZEhpc3RvcnlSZXNwb25zZSB7XG5cbiAgICAvKipcbiAgICAgKiBBIGxpc3Qgb2YgdXAgdG8gMjAgSldTIHRyYW5zYWN0aW9ucywgb3IgYW4gZW1wdHkgYXJyYXkgaWYgdGhlIGN1c3RvbWVyIGhhc24mIzM5O3QgcmVjZWl2ZWQgYW55IHJlZnVuZHMgaW4geW91ciBhcHAuIFRoZSB0cmFuc2FjdGlvbnMgYXJlIHNvcnRlZCBpbiBhc2NlbmRpbmcgb3JkZXIgYnkgcmV2b2NhdGlvbkRhdGUuXG4gICAgICpcbiAgICAgKiB7QGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2RvY3VtZW50YXRpb24vYXBwc3RvcmVzZXJ2ZXJhcGkvandzdHJhbnNhY3Rpb24gSldTVHJhbnNhY3Rpb259XG4gICAgICoqL1xuICAgIHNpZ25lZFRyYW5zYWN0aW9ucz86IHN0cmluZ1tdO1xuICAgICAgICBcbiAgICAvKipcbiAgICAgKiBBIHRva2VuIHlvdSB1c2UgaW4gYSBxdWVyeSB0byByZXF1ZXN0IHRoZSBuZXh0IHNldCBvZiB0cmFuc2FjdGlvbnMgZm9yIHRoZSBjdXN0b21lci5cbiAgICAgKlxuICAgICAqIHtAbGluayBodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20vZG9jdW1lbnRhdGlvbi9hcHBzdG9yZXNlcnZlcmFwaS9yZXZpc2lvbiByZXZpc2lvbn1cbiAgICAgKiovXG4gICAgcmV2aXNpb24/OiBzdHJpbmdcbiAgICAgICAgXG4gICAgLyoqXG4gICAgICogQSBCb29sZWFuIHZhbHVlIGluZGljYXRpbmcgd2hldGhlciB0aGUgQXBwIFN0b3JlIGhhcyBtb3JlIHRyYW5zYWN0aW9uIGRhdGEuXG4gICAgICpcbiAgICAgKiB7QGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2RvY3VtZW50YXRpb24vYXBwc3RvcmVzZXJ2ZXJhcGkvaGFzbW9yZSBoYXNNb3JlfVxuICAgICAqKi9cbiAgICBoYXNNb3JlPzogYm9vbGVhblxufVxuXG5cbmV4cG9ydCBjbGFzcyBSZWZ1bmRIaXN0b3J5UmVzcG9uc2VWYWxpZGF0b3IgaW1wbGVtZW50cyBWYWxpZGF0b3I8UmVmdW5kSGlzdG9yeVJlc3BvbnNlPiB7XG4gICAgdmFsaWRhdGUob2JqOiBhbnkpOiBvYmogaXMgUmVmdW5kSGlzdG9yeVJlc3BvbnNlIHtcbiAgICAgICAgaWYgKHR5cGVvZiBvYmpbJ3NpZ25lZFRyYW5zYWN0aW9ucyddICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KG9ialsnc2lnbmVkVHJhbnNhY3Rpb25zJ10pKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHNpZ25lZFRyYW5zYWN0aW9uIG9mIG9ialsnc2lnbmVkVHJhbnNhY3Rpb25zJ10pIHtcbiAgICAgICAgICAgICAgICBpZiAoISh0eXBlb2Ygc2lnbmVkVHJhbnNhY3Rpb24gPT09IFwic3RyaW5nXCIgfHwgc2lnbmVkVHJhbnNhY3Rpb24gaW5zdGFuY2VvZiBTdHJpbmcpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoKHR5cGVvZiBvYmpbJ3JldmlzaW9uJ10gIT09ICd1bmRlZmluZWQnKSAmJiAhKHR5cGVvZiBvYmpbJ3JldmlzaW9uJ10gPT09IFwic3RyaW5nXCIgfHwgb2JqWydyZXZpc2lvbiddIGluc3RhbmNlb2YgU3RyaW5nKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgIH1cbiAgICAgICAgaWYgKCh0eXBlb2Ygb2JqWydoYXNNb3JlJ10gIT09ICd1bmRlZmluZWQnKSAmJiAhKHR5cGVvZiBvYmpbJ2hhc01vcmUnXSA9PT0gXCJib29sZWFuXCIgfHwgb2JqWydoYXNNb3JlJ10gaW5zdGFuY2VvZiBCb29sZWFuKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG59XG4iXX0=