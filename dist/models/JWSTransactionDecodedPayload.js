"use strict";
// Copyright (c) 2023 Apple Inc. Licensed under MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.JWSTransactionDecodedPayloadValidator = void 0;
const Environment_1 = require("./Environment");
const InAppOwnershipType_1 = require("./InAppOwnershipType");
const OfferDiscountType_1 = require("./OfferDiscountType");
const OfferType_1 = require("./OfferType");
const RevocationReason_1 = require("./RevocationReason");
const TransactionReason_1 = require("./TransactionReason");
const Type_1 = require("./Type");
class JWSTransactionDecodedPayloadValidator {
    validate(obj) {
        if ((typeof obj['originalTransactionId'] !== 'undefined') && !(typeof obj['originalTransactionId'] === "string" || obj['originalTransactionId'] instanceof String)) {
            return false;
        }
        if ((typeof obj['transactionId'] !== 'undefined') && !(typeof obj['transactionId'] === "string" || obj['transactionId'] instanceof String)) {
            return false;
        }
        if ((typeof obj['webOrderLineItemId'] !== 'undefined') && !(typeof obj['webOrderLineItemId'] === "string" || obj['webOrderLineItemId'] instanceof String)) {
            return false;
        }
        if ((typeof obj['bundleId'] !== 'undefined') && !(typeof obj['bundleId'] === "string" || obj['bundleId'] instanceof String)) {
            return false;
        }
        if ((typeof obj['productId'] !== 'undefined') && !(typeof obj['productId'] === "string" || obj['productId'] instanceof String)) {
            return false;
        }
        if ((typeof obj['subscriptionGroupIdentifier'] !== 'undefined') && !(typeof obj['subscriptionGroupIdentifier'] === "string" || obj['subscriptionGroupIdentifier'] instanceof String)) {
            return false;
        }
        if ((typeof obj['purchaseDate'] !== 'undefined') && !(typeof obj['purchaseDate'] === "number")) {
            return false;
        }
        if ((typeof obj['originalPurchaseDate'] !== 'undefined') && !(typeof obj['originalPurchaseDate'] === "number")) {
            return false;
        }
        if ((typeof obj['expiresDate'] !== 'undefined') && !(typeof obj['expiresDate'] === "number")) {
            return false;
        }
        if ((typeof obj['quantity'] !== 'undefined') && !(typeof obj['quantity'] === 'number')) {
            return false;
        }
        if ((typeof obj['type'] !== 'undefined') && !(JWSTransactionDecodedPayloadValidator.typeValidator.validate(obj['type']))) {
            return false;
        }
        if ((typeof obj['appAccountToken'] !== 'undefined') && !(typeof obj['appAccountToken'] === "string" || obj['appAccountToken'] instanceof String)) {
            return false;
        }
        if ((typeof obj['inAppOwnershipType'] !== 'undefined') && !(JWSTransactionDecodedPayloadValidator.inAppOwnershipTypeValidator.validate(obj['inAppOwnershipType']))) {
            return false;
        }
        if ((typeof obj['signedDate'] !== 'undefined') && !(typeof obj['signedDate'] === "number")) {
            return false;
        }
        if ((typeof obj['revocationReason'] !== 'undefined') && !(JWSTransactionDecodedPayloadValidator.revocationReasonValidator.validate(obj['revocationReason']))) {
            return false;
        }
        if ((typeof obj['revocationDate'] !== 'undefined') && !(typeof obj['revocationDate'] === "number")) {
            return false;
        }
        if ((typeof obj['isUpgraded'] !== 'undefined') && !(typeof obj['isUpgraded'] === "boolean" || obj['isUpgraded'] instanceof Boolean)) {
            return false;
        }
        if ((typeof obj['offerType'] !== 'undefined') && !(JWSTransactionDecodedPayloadValidator.offerTypeValidator.validate(obj['offerType']))) {
            return false;
        }
        if ((typeof obj['offerIdentifier'] !== 'undefined') && !(typeof obj['offerIdentifier'] === "string" || obj['offerIdentifier'] instanceof String)) {
            return false;
        }
        if ((typeof obj['environment'] !== 'undefined') && !(JWSTransactionDecodedPayloadValidator.environmentValidator.validate(obj['environment']))) {
            return false;
        }
        if ((typeof obj['storefront'] !== 'undefined') && !(typeof obj['storefront'] === "string" || obj['storefront'] instanceof String)) {
            return false;
        }
        if ((typeof obj['storefrontId'] !== 'undefined') && !(typeof obj['storefrontId'] === "string" || obj['storefrontId'] instanceof String)) {
            return false;
        }
        if ((typeof obj['transactionReason'] !== 'undefined') && !(JWSTransactionDecodedPayloadValidator.transactionReasonValidator.validate(obj['transactionReason']))) {
            return false;
        }
        if ((typeof obj['currency'] !== 'undefined') && !(typeof obj['currency'] === "string" || obj['currency'] instanceof String)) {
            return false;
        }
        if ((typeof obj['price'] !== 'undefined') && !(typeof obj['price'] === "number")) {
            return false;
        }
        if ((typeof obj['offerDiscountType'] !== 'undefined') && !(JWSTransactionDecodedPayloadValidator.offerDiscountTypeValidator.validate(obj['offerDiscountType']))) {
            return false;
        }
        return true;
    }
}
exports.JWSTransactionDecodedPayloadValidator = JWSTransactionDecodedPayloadValidator;
JWSTransactionDecodedPayloadValidator.environmentValidator = new Environment_1.EnvironmentValidator();
JWSTransactionDecodedPayloadValidator.offerTypeValidator = new OfferType_1.OfferTypeValidator();
JWSTransactionDecodedPayloadValidator.revocationReasonValidator = new RevocationReason_1.RevocationReasonValidator();
JWSTransactionDecodedPayloadValidator.inAppOwnershipTypeValidator = new InAppOwnershipType_1.InAppOwnershipTypeValidator();
JWSTransactionDecodedPayloadValidator.typeValidator = new Type_1.TypeValidator();
JWSTransactionDecodedPayloadValidator.transactionReasonValidator = new TransactionReason_1.TransactionReasonValidator();
JWSTransactionDecodedPayloadValidator.offerDiscountTypeValidator = new OfferDiscountType_1.OfferDiscountTypeValidator();
//# sourceMappingURL=data:application/json;base64,