"use strict";
// Copyright (c) 2023 Apple Inc. Licensed under MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.LastTransactionsItemValidator = void 0;
const Status_1 = require("./Status");
class LastTransactionsItemValidator {
    validate(obj) {
        if ((typeof obj['status'] !== 'undefined') && !(LastTransactionsItemValidator.statusValidator.validate(obj['status']))) {
            return false;
        }
        if ((typeof obj['originalTransactionId'] !== 'undefined') && !(typeof obj['originalTransactionId'] === "string" || obj['originalTransactionId'] instanceof String)) {
            return false;
        }
        if ((typeof obj['signedTransactionInfo'] !== 'undefined') && !(typeof obj['signedTransactionInfo'] === "string" || obj['signedTransactionInfo'] instanceof String)) {
            return false;
        }
        if ((typeof obj['signedRenewalInfo'] !== 'undefined') && !(typeof obj['signedRenewalInfo'] === "string" || obj['signedRenewalInfo'] instanceof String)) {
            return false;
        }
        return true;
    }
}
exports.LastTransactionsItemValidator = LastTransactionsItemValidator;
LastTransactionsItemValidator.statusValidator = new Status_1.StatusValidator();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGFzdFRyYW5zYWN0aW9uc0l0ZW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9tb2RlbHMvTGFzdFRyYW5zYWN0aW9uc0l0ZW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLDREQUE0RDs7O0FBRTVELHFDQUFrRDtBQXdDbEQsTUFBYSw2QkFBNkI7SUFFdEMsUUFBUSxDQUFDLEdBQVE7UUFDYixJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsUUFBUSxDQUFDLEtBQUssV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLDZCQUE2QixDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1lBQ3JILE9BQU8sS0FBSyxDQUFBO1FBQ2hCLENBQUM7UUFDRCxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsdUJBQXVCLENBQUMsS0FBSyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxHQUFHLENBQUMsdUJBQXVCLENBQUMsS0FBSyxRQUFRLElBQUksR0FBRyxDQUFDLHVCQUF1QixDQUFDLFlBQVksTUFBTSxDQUFDLEVBQUUsQ0FBQztZQUNqSyxPQUFPLEtBQUssQ0FBQTtRQUNoQixDQUFDO1FBQ0QsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLHVCQUF1QixDQUFDLEtBQUssV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sR0FBRyxDQUFDLHVCQUF1QixDQUFDLEtBQUssUUFBUSxJQUFJLEdBQUcsQ0FBQyx1QkFBdUIsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxFQUFFLENBQUM7WUFDakssT0FBTyxLQUFLLENBQUE7UUFDaEIsQ0FBQztRQUNELElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLFFBQVEsSUFBSSxHQUFHLENBQUMsbUJBQW1CLENBQUMsWUFBWSxNQUFNLENBQUMsRUFBRSxDQUFDO1lBQ3JKLE9BQU8sS0FBSyxDQUFBO1FBQ2hCLENBQUM7UUFDRCxPQUFPLElBQUksQ0FBQTtJQUNmLENBQUM7O0FBaEJMLHNFQWlCQztBQWhCbUIsNkNBQWUsR0FBRyxJQUFJLHdCQUFlLEVBQUUsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAyMyBBcHBsZSBJbmMuIExpY2Vuc2VkIHVuZGVyIE1JVCBMaWNlbnNlLlxuXG5pbXBvcnQgeyBTdGF0dXMsIFN0YXR1c1ZhbGlkYXRvciB9IGZyb20gXCIuL1N0YXR1c1wiXG5pbXBvcnQgeyBWYWxpZGF0b3IgfSBmcm9tIFwiLi9WYWxpZGF0b3JcIlxuXG4vKipcbiAqIFRoZSBtb3N0IHJlY2VudCBBcHAgU3RvcmUtc2lnbmVkIHRyYW5zYWN0aW9uIGluZm9ybWF0aW9uIGFuZCBBcHAgU3RvcmUtc2lnbmVkIHJlbmV3YWwgaW5mb3JtYXRpb24gZm9yIGFuIGF1dG8tcmVuZXdhYmxlIHN1YnNjcmlwdGlvbi5cbiAqXG4gKiB7QGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2RvY3VtZW50YXRpb24vYXBwc3RvcmVzZXJ2ZXJhcGkvbGFzdHRyYW5zYWN0aW9uc2l0ZW0gbGFzdFRyYW5zYWN0aW9uc0l0ZW19XG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTGFzdFRyYW5zYWN0aW9uc0l0ZW0ge1xuXG4gICAgLyoqXG4gICAgICogVGhlIHN0YXR1cyBvZiB0aGUgYXV0by1yZW5ld2FibGUgc3Vic2NyaXB0aW9uLlxuICAgICAqXG4gICAgICoge0BsaW5rIGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxlLmNvbS9kb2N1bWVudGF0aW9uL2FwcHN0b3Jlc2VydmVyYXBpL3N0YXR1cyBzdGF0dXN9XG4gICAgICoqL1xuICAgIHN0YXR1cz86IFN0YXR1cyB8IG51bWJlclxuICAgICAgICBcbiAgICAvKipcbiAgICAgKiBUaGUgb3JpZ2luYWwgdHJhbnNhY3Rpb24gaWRlbnRpZmllciBvZiBhIHB1cmNoYXNlLlxuICAgICAqXG4gICAgICoge0BsaW5rIGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxlLmNvbS9kb2N1bWVudGF0aW9uL2FwcHN0b3Jlc2VydmVyYXBpL29yaWdpbmFsdHJhbnNhY3Rpb25pZCBvcmlnaW5hbFRyYW5zYWN0aW9uSWR9XG4gICAgICoqL1xuICAgIG9yaWdpbmFsVHJhbnNhY3Rpb25JZD86IHN0cmluZ1xuICAgICAgICBcbiAgICAvKipcbiAgICAgKiBUcmFuc2FjdGlvbiBpbmZvcm1hdGlvbiBzaWduZWQgYnkgdGhlIEFwcCBTdG9yZSwgaW4gSlNPTiBXZWIgU2lnbmF0dXJlIChKV1MpIGZvcm1hdC5cbiAgICAgKlxuICAgICAqIHtAbGluayBodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20vZG9jdW1lbnRhdGlvbi9hcHBzdG9yZXNlcnZlcmFwaS9qd3N0cmFuc2FjdGlvbiBKV1NUcmFuc2FjdGlvbn1cbiAgICAgKiovXG4gICAgc2lnbmVkVHJhbnNhY3Rpb25JbmZvPzogc3RyaW5nXG4gICAgICAgIFxuICAgIC8qKlxuICAgICAqIFN1YnNjcmlwdGlvbiByZW5ld2FsIGluZm9ybWF0aW9uLCBzaWduZWQgYnkgdGhlIEFwcCBTdG9yZSwgaW4gSlNPTiBXZWIgU2lnbmF0dXJlIChKV1MpIGZvcm1hdC5cbiAgICAgKlxuICAgICAqIHtAbGluayBodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20vZG9jdW1lbnRhdGlvbi9hcHBzdG9yZXNlcnZlcmFwaS9qd3NyZW5ld2FsaW5mbyBKV1NSZW5ld2FsSW5mb31cbiAgICAgKiovXG4gICAgc2lnbmVkUmVuZXdhbEluZm8/OiBzdHJpbmdcbn1cblxuXG5leHBvcnQgY2xhc3MgTGFzdFRyYW5zYWN0aW9uc0l0ZW1WYWxpZGF0b3IgaW1wbGVtZW50cyBWYWxpZGF0b3I8TGFzdFRyYW5zYWN0aW9uc0l0ZW0+IHtcbiAgICBzdGF0aWMgcmVhZG9ubHkgc3RhdHVzVmFsaWRhdG9yID0gbmV3IFN0YXR1c1ZhbGlkYXRvcigpXG4gICAgdmFsaWRhdGUob2JqOiBhbnkpOiBvYmogaXMgTGFzdFRyYW5zYWN0aW9uc0l0ZW0ge1xuICAgICAgICBpZiAoKHR5cGVvZiBvYmpbJ3N0YXR1cyddICE9PSAndW5kZWZpbmVkJykgJiYgIShMYXN0VHJhbnNhY3Rpb25zSXRlbVZhbGlkYXRvci5zdGF0dXNWYWxpZGF0b3IudmFsaWRhdGUob2JqWydzdGF0dXMnXSkpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgfVxuICAgICAgICBpZiAoKHR5cGVvZiBvYmpbJ29yaWdpbmFsVHJhbnNhY3Rpb25JZCddICE9PSAndW5kZWZpbmVkJykgJiYgISh0eXBlb2Ygb2JqWydvcmlnaW5hbFRyYW5zYWN0aW9uSWQnXSA9PT0gXCJzdHJpbmdcIiB8fCBvYmpbJ29yaWdpbmFsVHJhbnNhY3Rpb25JZCddIGluc3RhbmNlb2YgU3RyaW5nKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgIH1cbiAgICAgICAgaWYgKCh0eXBlb2Ygb2JqWydzaWduZWRUcmFuc2FjdGlvbkluZm8nXSAhPT0gJ3VuZGVmaW5lZCcpICYmICEodHlwZW9mIG9ialsnc2lnbmVkVHJhbnNhY3Rpb25JbmZvJ10gPT09IFwic3RyaW5nXCIgfHwgb2JqWydzaWduZWRUcmFuc2FjdGlvbkluZm8nXSBpbnN0YW5jZW9mIFN0cmluZykpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICB9XG4gICAgICAgIGlmICgodHlwZW9mIG9ialsnc2lnbmVkUmVuZXdhbEluZm8nXSAhPT0gJ3VuZGVmaW5lZCcpICYmICEodHlwZW9mIG9ialsnc2lnbmVkUmVuZXdhbEluZm8nXSA9PT0gXCJzdHJpbmdcIiB8fCBvYmpbJ3NpZ25lZFJlbmV3YWxJbmZvJ10gaW5zdGFuY2VvZiBTdHJpbmcpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cbn1cbiJdfQ==