"use strict";
// Copyright (c) 2023 Apple Inc. Licensed under MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.createSignedDataFromJson = exports.getDefaultSignedPayloadVerifier = exports.getSignedPayloadVerifierWithDefaultAppAppleId = exports.getSignedPayloadVerifier = exports.readBytes = exports.readFile = void 0;
const fs = require("fs");
const Environment_1 = require("../models/Environment");
const jws_verification_1 = require("../jws_verification");
const crypto_1 = require("crypto");
const jsonwebtoken = require("jsonwebtoken");
function readFile(path) {
    return fs.readFileSync(path, {
        encoding: 'utf8'
    });
}
exports.readFile = readFile;
function readBytes(path) {
    return fs.readFileSync(path);
}
exports.readBytes = readBytes;
function getSignedPayloadVerifier(environment, bundleId, appAppleId) {
    return new jws_verification_1.SignedDataVerifier([readBytes('tests/resources/certs/testCA.der')], false, environment, bundleId, appAppleId);
}
exports.getSignedPayloadVerifier = getSignedPayloadVerifier;
function getSignedPayloadVerifierWithDefaultAppAppleId(environment, bundleId) {
    return getSignedPayloadVerifier(environment, bundleId, 1234);
}
exports.getSignedPayloadVerifierWithDefaultAppAppleId = getSignedPayloadVerifierWithDefaultAppAppleId;
function getDefaultSignedPayloadVerifier() {
    return getSignedPayloadVerifierWithDefaultAppAppleId(Environment_1.Environment.LOCAL_TESTING, "com.example");
}
exports.getDefaultSignedPayloadVerifier = getDefaultSignedPayloadVerifier;
function createSignedDataFromJson(path) {
    const fileContents = readFile(path);
    const keyPairOptions = {
        namedCurve: 'prime256v1',
        publicKeyEncoding: {
            type: 'spki',
            format: 'pem'
        },
        privateKeyEncoding: {
            type: 'pkcs8',
            format: 'pem'
        }
    };
    const keypair = (0, crypto_1.generateKeyPairSync)("ec", keyPairOptions);
    const privateKey = keypair.privateKey;
    return jsonwebtoken.sign(fileContents, privateKey, { algorithm: 'ES256' });
}
exports.createSignedDataFromJson = createSignedDataFromJson;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3Rlc3RzL3V0aWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLDREQUE0RDs7O0FBRTVELHlCQUF5QjtBQUN6Qix1REFBb0Q7QUFDcEQsMERBQXlEO0FBQ3pELG1DQUErRDtBQUMvRCw2Q0FBOEM7QUFFOUMsU0FBZ0IsUUFBUSxDQUFDLElBQVk7SUFDakMsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRTtRQUN6QixRQUFRLEVBQUUsTUFBTTtLQUNuQixDQUFDLENBQUE7QUFDTixDQUFDO0FBSkQsNEJBSUM7QUFFRCxTQUFnQixTQUFTLENBQUMsSUFBWTtJQUNsQyxPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUE7QUFDaEMsQ0FBQztBQUZELDhCQUVDO0FBRUQsU0FBZ0Isd0JBQXdCLENBQUMsV0FBd0IsRUFBRSxRQUFnQixFQUFFLFVBQWtCO0lBQ25HLE9BQU8sSUFBSSxxQ0FBa0IsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsVUFBVSxDQUFDLENBQUE7QUFDNUgsQ0FBQztBQUZELDREQUVDO0FBRUQsU0FBZ0IsNkNBQTZDLENBQUMsV0FBd0IsRUFBRSxRQUFnQjtJQUNwRyxPQUFPLHdCQUF3QixDQUFDLFdBQVcsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUE7QUFDaEUsQ0FBQztBQUZELHNHQUVDO0FBRUQsU0FBZ0IsK0JBQStCO0lBQzNDLE9BQU8sNkNBQTZDLENBQUMseUJBQVcsQ0FBQyxhQUFhLEVBQUUsYUFBYSxDQUFDLENBQUE7QUFDbEcsQ0FBQztBQUZELDBFQUVDO0FBRUQsU0FBZ0Isd0JBQXdCLENBQUMsSUFBWTtJQUNqRCxNQUFNLFlBQVksR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDbkMsTUFBTSxjQUFjLEdBQW1DO1FBQ25ELFVBQVUsRUFBRSxZQUFZO1FBQ3hCLGlCQUFpQixFQUFFO1lBQ2YsSUFBSSxFQUFFLE1BQU07WUFDWixNQUFNLEVBQUUsS0FBSztTQUNoQjtRQUNELGtCQUFrQixFQUFFO1lBQ2hCLElBQUksRUFBRSxPQUFPO1lBQ2IsTUFBTSxFQUFFLEtBQUs7U0FDaEI7S0FDSixDQUFBO0lBQ0QsTUFBTSxPQUFPLEdBQUcsSUFBQSw0QkFBbUIsRUFBQyxJQUFJLEVBQUUsY0FBYyxDQUFDLENBQUE7SUFDekQsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQTtJQUNyQyxPQUFPLFlBQVksQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLFVBQVUsRUFBRSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBQzlFLENBQUM7QUFoQkQsNERBZ0JDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDIzIEFwcGxlIEluYy4gTGljZW5zZWQgdW5kZXIgTUlUIExpY2Vuc2UuXG5cbmltcG9ydCAqIGFzIGZzIGZyb20gJ2ZzJztcbmltcG9ydCB7IEVudmlyb25tZW50IH0gZnJvbSAnLi4vbW9kZWxzL0Vudmlyb25tZW50JztcbmltcG9ydCB7IFNpZ25lZERhdGFWZXJpZmllciB9IGZyb20gJy4uL2p3c192ZXJpZmljYXRpb24nO1xuaW1wb3J0IHsgRUNLZXlQYWlyT3B0aW9ucywgZ2VuZXJhdGVLZXlQYWlyU3luYyB9IGZyb20gJ2NyeXB0byc7XG5pbXBvcnQganNvbndlYnRva2VuID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XG5cbmV4cG9ydCBmdW5jdGlvbiByZWFkRmlsZShwYXRoOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiBmcy5yZWFkRmlsZVN5bmMocGF0aCwge1xuICAgICAgICBlbmNvZGluZzogJ3V0ZjgnXG4gICAgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRCeXRlcyhwYXRoOiBzdHJpbmcpOiBCdWZmZXIge1xuICAgIHJldHVybiBmcy5yZWFkRmlsZVN5bmMocGF0aClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFNpZ25lZFBheWxvYWRWZXJpZmllcihlbnZpcm9ubWVudDogRW52aXJvbm1lbnQsIGJ1bmRsZUlkOiBzdHJpbmcsIGFwcEFwcGxlSWQ6IG51bWJlcik6IFNpZ25lZERhdGFWZXJpZmllciB7XG4gICAgcmV0dXJuIG5ldyBTaWduZWREYXRhVmVyaWZpZXIoW3JlYWRCeXRlcygndGVzdHMvcmVzb3VyY2VzL2NlcnRzL3Rlc3RDQS5kZXInKV0sIGZhbHNlLCBlbnZpcm9ubWVudCwgYnVuZGxlSWQsIGFwcEFwcGxlSWQpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTaWduZWRQYXlsb2FkVmVyaWZpZXJXaXRoRGVmYXVsdEFwcEFwcGxlSWQoZW52aXJvbm1lbnQ6IEVudmlyb25tZW50LCBidW5kbGVJZDogc3RyaW5nKTogU2lnbmVkRGF0YVZlcmlmaWVyIHtcbiAgICByZXR1cm4gZ2V0U2lnbmVkUGF5bG9hZFZlcmlmaWVyKGVudmlyb25tZW50LCBidW5kbGVJZCwgMTIzNClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldERlZmF1bHRTaWduZWRQYXlsb2FkVmVyaWZpZXIoKTogU2lnbmVkRGF0YVZlcmlmaWVyIHtcbiAgICByZXR1cm4gZ2V0U2lnbmVkUGF5bG9hZFZlcmlmaWVyV2l0aERlZmF1bHRBcHBBcHBsZUlkKEVudmlyb25tZW50LkxPQ0FMX1RFU1RJTkcsIFwiY29tLmV4YW1wbGVcIilcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNpZ25lZERhdGFGcm9tSnNvbihwYXRoOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGNvbnN0IGZpbGVDb250ZW50cyA9IHJlYWRGaWxlKHBhdGgpXG4gICAgY29uc3Qga2V5UGFpck9wdGlvbnM6IEVDS2V5UGFpck9wdGlvbnM8J3BlbScsICdwZW0nPiA9IHtcbiAgICAgICAgbmFtZWRDdXJ2ZTogJ3ByaW1lMjU2djEnLFxuICAgICAgICBwdWJsaWNLZXlFbmNvZGluZzoge1xuICAgICAgICAgICAgdHlwZTogJ3Nwa2knLFxuICAgICAgICAgICAgZm9ybWF0OiAncGVtJ1xuICAgICAgICB9LFxuICAgICAgICBwcml2YXRlS2V5RW5jb2Rpbmc6IHtcbiAgICAgICAgICAgIHR5cGU6ICdwa2NzOCcsXG4gICAgICAgICAgICBmb3JtYXQ6ICdwZW0nXG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3Qga2V5cGFpciA9IGdlbmVyYXRlS2V5UGFpclN5bmMoXCJlY1wiLCBrZXlQYWlyT3B0aW9ucylcbiAgICBjb25zdCBwcml2YXRlS2V5ID0ga2V5cGFpci5wcml2YXRlS2V5XG4gICAgcmV0dXJuIGpzb253ZWJ0b2tlbi5zaWduKGZpbGVDb250ZW50cywgcHJpdmF0ZUtleSwgeyBhbGdvcml0aG06ICdFUzI1Nid9KTtcbn0iXX0=