"use strict";
// Copyright (c) 2023 Apple Inc. Licensed under MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckTestNotificationResponseValidator = void 0;
const SendAttemptItem_1 = require("./SendAttemptItem");
class CheckTestNotificationResponseValidator {
    validate(obj) {
        if ((typeof obj['signedPayload'] !== 'undefined') && !(typeof obj['signedPayload'] === "string" || obj['signedPayload'] instanceof String)) {
            return false;
        }
        if (typeof obj['sendAttempts'] !== 'undefined') {
            if (!Array.isArray(obj['sendAttempts'])) {
                return false;
            }
            for (const sendAttempt of obj['sendAttempts']) {
                if (!(CheckTestNotificationResponseValidator.sendAttemptItemValidator.validate(sendAttempt))) {
                    return false;
                }
            }
        }
        return true;
    }
}
exports.CheckTestNotificationResponseValidator = CheckTestNotificationResponseValidator;
CheckTestNotificationResponseValidator.sendAttemptItemValidator = new SendAttemptItem_1.SendAttemptItemValidator();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2hlY2tUZXN0Tm90aWZpY2F0aW9uUmVzcG9uc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9tb2RlbHMvQ2hlY2tUZXN0Tm90aWZpY2F0aW9uUmVzcG9uc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLDREQUE0RDs7O0FBRTVELHVEQUE4RTtBQXlCOUUsTUFBYSxzQ0FBc0M7SUFFL0MsUUFBUSxDQUFDLEdBQVE7UUFDYixJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsZUFBZSxDQUFDLEtBQUssV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sR0FBRyxDQUFDLGVBQWUsQ0FBQyxLQUFLLFFBQVEsSUFBSSxHQUFHLENBQUMsZUFBZSxDQUFDLFlBQVksTUFBTSxDQUFDLEVBQUUsQ0FBQztZQUN6SSxPQUFPLEtBQUssQ0FBQTtRQUNoQixDQUFDO1FBQ0QsSUFBSSxPQUFPLEdBQUcsQ0FBQyxjQUFjLENBQUMsS0FBSyxXQUFXLEVBQUUsQ0FBQztZQUM3QyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUMsRUFBRSxDQUFDO2dCQUN0QyxPQUFPLEtBQUssQ0FBQTtZQUNoQixDQUFDO1lBQ0QsS0FBSyxNQUFNLFdBQVcsSUFBSSxHQUFHLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQztnQkFDNUMsSUFBSSxDQUFDLENBQUMsc0NBQXNDLENBQUMsd0JBQXdCLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEVBQUUsQ0FBQztvQkFDM0YsT0FBTyxLQUFLLENBQUE7Z0JBQ2hCLENBQUM7WUFDTCxDQUFDO1FBQ0wsQ0FBQztRQUNELE9BQU8sSUFBSSxDQUFBO0lBQ2YsQ0FBQzs7QUFqQkwsd0ZBa0JDO0FBakJtQiwrREFBd0IsR0FBRyxJQUFJLDBDQUF3QixFQUFFLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMjMgQXBwbGUgSW5jLiBMaWNlbnNlZCB1bmRlciBNSVQgTGljZW5zZS5cblxuaW1wb3J0IHsgU2VuZEF0dGVtcHRJdGVtLCBTZW5kQXR0ZW1wdEl0ZW1WYWxpZGF0b3IgfSBmcm9tIFwiLi9TZW5kQXR0ZW1wdEl0ZW1cIjtcbmltcG9ydCB7IFZhbGlkYXRvciB9IGZyb20gXCIuL1ZhbGlkYXRvclwiO1xuXG4vKipcbiAqIEEgcmVzcG9uc2UgdGhhdCBjb250YWlucyB0aGUgY29udGVudHMgb2YgdGhlIHRlc3Qgbm90aWZpY2F0aW9uIHNlbnQgYnkgdGhlIEFwcCBTdG9yZSBzZXJ2ZXIgYW5kIHRoZSByZXN1bHQgZnJvbSB5b3VyIHNlcnZlci5cbiAqXG4gKiB7QGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2RvY3VtZW50YXRpb24vYXBwc3RvcmVzZXJ2ZXJhcGkvY2hlY2t0ZXN0bm90aWZpY2F0aW9ucmVzcG9uc2UgQ2hlY2tUZXN0Tm90aWZpY2F0aW9uUmVzcG9uc2V9XG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQ2hlY2tUZXN0Tm90aWZpY2F0aW9uUmVzcG9uc2Uge1xuXG4gICAgLyoqXG4gICAgICogQSBjcnlwdG9ncmFwaGljYWxseSBzaWduZWQgcGF5bG9hZCwgaW4gSlNPTiBXZWIgU2lnbmF0dXJlIChKV1MpIGZvcm1hdCwgY29udGFpbmluZyB0aGUgcmVzcG9uc2UgYm9keSBmb3IgYSB2ZXJzaW9uIDIgbm90aWZpY2F0aW9uLlxuICAgICAqXG4gICAgICoge0BsaW5rIGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxlLmNvbS9kb2N1bWVudGF0aW9uL2FwcHN0b3Jlc2VydmVybm90aWZpY2F0aW9ucy9zaWduZWRwYXlsb2FkIHNpZ25lZFBheWxvYWR9XG4gICAgICoqL1xuICAgIHNpZ25lZFBheWxvYWQ/OiBzdHJpbmdcbiAgICAgICAgXG4gICAgLyoqXG4gICAgICogQW4gYXJyYXkgb2YgaW5mb3JtYXRpb24gdGhlIEFwcCBTdG9yZSBzZXJ2ZXIgcmVjb3JkcyBmb3IgaXRzIGF0dGVtcHRzIHRvIHNlbmQgdGhlIFRFU1Qgbm90aWZpY2F0aW9uIHRvIHlvdXIgc2VydmVyLiBUaGUgYXJyYXkgbWF5IGNvbnRhaW4gYSBtYXhpbXVtIG9mIHNpeCBzZW5kQXR0ZW1wdEl0ZW0gb2JqZWN0cy5cbiAgICAgKlxuICAgICAqIHtAbGluayBodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20vZG9jdW1lbnRhdGlvbi9hcHBzdG9yZXNlcnZlcmFwaS9zZW5kYXR0ZW1wdGl0ZW0gc2VuZEF0dGVtcHRJdGVtfVxuICAgICAqKi9cbiAgICBzZW5kQXR0ZW1wdHM/OiBTZW5kQXR0ZW1wdEl0ZW1bXVxufVxuXG5leHBvcnQgY2xhc3MgQ2hlY2tUZXN0Tm90aWZpY2F0aW9uUmVzcG9uc2VWYWxpZGF0b3IgaW1wbGVtZW50cyBWYWxpZGF0b3I8Q2hlY2tUZXN0Tm90aWZpY2F0aW9uUmVzcG9uc2U+IHtcbiAgICBzdGF0aWMgcmVhZG9ubHkgc2VuZEF0dGVtcHRJdGVtVmFsaWRhdG9yID0gbmV3IFNlbmRBdHRlbXB0SXRlbVZhbGlkYXRvcigpXG4gICAgdmFsaWRhdGUob2JqOiBhbnkpOiBvYmogaXMgQ2hlY2tUZXN0Tm90aWZpY2F0aW9uUmVzcG9uc2Uge1xuICAgICAgICBpZiAoKHR5cGVvZiBvYmpbJ3NpZ25lZFBheWxvYWQnXSAhPT0gJ3VuZGVmaW5lZCcpICYmICEodHlwZW9mIG9ialsnc2lnbmVkUGF5bG9hZCddID09PSBcInN0cmluZ1wiIHx8IG9ialsnc2lnbmVkUGF5bG9hZCddIGluc3RhbmNlb2YgU3RyaW5nKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBvYmpbJ3NlbmRBdHRlbXB0cyddICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KG9ialsnc2VuZEF0dGVtcHRzJ10pKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHNlbmRBdHRlbXB0IG9mIG9ialsnc2VuZEF0dGVtcHRzJ10pIHtcbiAgICAgICAgICAgICAgICBpZiAoIShDaGVja1Rlc3ROb3RpZmljYXRpb25SZXNwb25zZVZhbGlkYXRvci5zZW5kQXR0ZW1wdEl0ZW1WYWxpZGF0b3IudmFsaWRhdGUoc2VuZEF0dGVtcHQpKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG59Il19